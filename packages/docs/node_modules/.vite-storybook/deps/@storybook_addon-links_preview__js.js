import "./chunk-WJF7AORB.js";
import "./chunk-XYZNNRLE.js";
import {
  require_dist
} from "./chunk-RGICYQAZ.js";
import "./chunk-FKC7EYNC.js";
import "./chunk-LOKCWTXA.js";
import "./chunk-ITQ2MZBB.js";
import "./chunk-5SRZO5LY.js";
import "./chunk-SWC2CW7X.js";
import "./chunk-3H6A4ZHV.js";
import "./chunk-ZUZENO63.js";
import {
  addons,
  init_public_api,
  makeDecorator
} from "./chunk-NRJ7V6RF.js";
import "./chunk-VCE6IZG5.js";
import "./chunk-RQZI2EMI.js";
import "./chunk-HMGACB3X.js";
import {
  require_lib
} from "./chunk-26WQST62.js";
import "./chunk-OHCKSNEM.js";
import {
  SELECT_STORY,
  STORY_CHANGED,
  init_esm as init_esm2
} from "./chunk-SJQGZXKU.js";
import "./chunk-W3L527CV.js";
import {
  init_es_array_from,
  init_es_function_name,
  init_es_object_assign
} from "./chunk-4EY7LLJD.js";
import {
  init_es_symbol,
  init_es_symbol_description,
  init_es_symbol_iterator
} from "./chunk-TEE4JC2V.js";
import {
  init_es_promise
} from "./chunk-SMWXS4WE.js";
import "./chunk-O67CR73I.js";
import "./chunk-T6AF2I6N.js";
import "./chunk-WOHVP5FN.js";
import "./chunk-ZNWYWQOU.js";
import "./chunk-5AUEMHUL.js";
import "./chunk-OPYN3PGP.js";
import "./chunk-TI3ADQEG.js";
import "./chunk-A3YX5XYC.js";
import "./chunk-SUUB2HIZ.js";
import "./chunk-QENVHA4B.js";
import "./chunk-2HW4PARD.js";
import "./chunk-RKNTHREH.js";
import {
  init_es_array_slice,
  init_es_object_freeze
} from "./chunk-KZKWDLHB.js";
import "./chunk-OMFKUMAG.js";
import "./chunk-7ATCFQV3.js";
import "./chunk-G2QJHHJ6.js";
import {
  init_esm
} from "./chunk-NUCUXKFJ.js";
import "./chunk-IY6AN3JH.js";
import {
  require_es_regexp_exec
} from "./chunk-65IB66A7.js";
import {
  init_es_array_concat,
  init_web_dom_collections_iterator,
  require_es_array_iterator,
  require_es_string_iterator
} from "./chunk-UPZADOHF.js";
import {
  init_es_object_to_string
} from "./chunk-QJJB33R7.js";
import {
  require_window
} from "./chunk-MBRSQHGS.js";
import {
  __toESM
} from "./chunk-MF7N2UXY.js";

// ../../node_modules/@storybook/addon-links/dist/esm/index.js
init_es_array_slice();
init_es_object_freeze();
init_esm();

// ../../node_modules/@storybook/addon-links/dist/esm/utils.js
init_es_object_to_string();
init_es_promise();
var import_es_regexp_exec = __toESM(require_es_regexp_exec());
init_es_array_concat();
init_es_object_assign();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_es_array_iterator = __toESM(require_es_array_iterator());
var import_es_string_iterator = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_from();
init_es_array_slice();
init_es_function_name();
var import_global = __toESM(require_window());
var import_qs = __toESM(require_lib());
init_public_api();
init_esm2();
var import_csf = __toESM(require_dist());

// ../../node_modules/@storybook/addon-links/dist/esm/constants.js
var ADDON_ID = "storybook/links";
var PARAM_KEY = "links";
var constants_default = {
  NAVIGATE: "".concat(ADDON_ID, "/navigate"),
  REQUEST: "".concat(ADDON_ID, "/request"),
  RECEIVE: "".concat(ADDON_ID, "/receive")
};

// ../../node_modules/@storybook/addon-links/dist/esm/utils.js
var document = import_global.default.document;
var HTMLElement = import_global.default.HTMLElement;
var navigate = function navigate2(params) {
  return addons.getChannel().emit(SELECT_STORY, params);
};
var linksListener = function linksListener2(e) {
  var target = e.target;
  if (!(target instanceof HTMLElement)) {
    return;
  }
  var element = target;
  var _element$dataset = element.dataset, kind = _element$dataset.sbKind, story = _element$dataset.sbStory;
  if (kind || story) {
    e.preventDefault();
    navigate({
      kind,
      story
    });
  }
};
var hasListener = false;
var on = function on2() {
  if (!hasListener) {
    hasListener = true;
    document.addEventListener("click", linksListener);
  }
};
var off = function off2() {
  if (hasListener) {
    hasListener = false;
    document.removeEventListener("click", linksListener);
  }
};
var withLinks = makeDecorator({
  name: "withLinks",
  parameterName: PARAM_KEY,
  wrapper: function wrapper(getStory, context) {
    on();
    addons.getChannel().once(STORY_CHANGED, off);
    return getStory(context);
  }
});

// ../../node_modules/@storybook/addon-links/dist/esm/index.js
if (module && module.hot && module.hot.decline) {
  module.hot.decline();
}

// ../../node_modules/@storybook/addon-links/dist/esm/preview.js
var decorators = [withLinks];
export {
  decorators
};
//# sourceMappingURL=@storybook_addon-links_preview__js.js.map
